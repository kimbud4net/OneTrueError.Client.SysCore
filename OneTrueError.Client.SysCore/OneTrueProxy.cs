using OneTrueError.Client.Contracts;
using OneTrueError.Client.Reporters;
using OneTrueError.Client.SysCore.Contracts;
using OneTrueError.Client.SysCore.Uploaders;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace OneTrueError.Client.SysCore
{
    /// <summary>
    ///  Wrapper
    /// </summary>
    public class OneTrueProxy
    {
        #region Static Wraper
        private static UploadToScreenshots UploadToScreenshots;
        public static void Credentials(Uri oneTrueHost, string appKey, string sharedSecret)
        {
            if (oneTrueHost == null) throw new ArgumentNullException("oneTrueHost");
            if (appKey == null) throw new ArgumentNullException("appKey");
            if (sharedSecret == null) throw new ArgumentNullException("sharedSecret");
            OneTrue.Configuration.Credentials(oneTrueHost, appKey, sharedSecret);
            UploadToScreenshots = new UploadToScreenshots(oneTrueHost, appKey, sharedSecret);
        }

        /// <summary>
        /// 建立Dto及上傳
        /// </summary>
        /// <param name="exception"></param>
        /// <returns></returns>
        public static ErrorReportDTO GenerateUploadReport(Exception exception)
        {
            ErrorReportDTO dto = GenerateReport(exception);
            UploadReport(dto);
            return dto;

        }
        public static ErrorReportDTO GenerateReport(Exception exception)
        {
            ErrorReportDTO dto = OneTrue.GenerateReport(exception);
            return dto;
        }

        public static ErrorReportDTO GenerateReport(IErrorReporterContext context)
        {
            ErrorReportDTO dto = OneTrue.GenerateReport(context);
            return dto;
        }

        //
        // Summary:
        //     Upload an error report.
        //
        // Parameters:
        //   dto:
        //     Typically generated by OneTrueError.Client.OneTrue.GenerateReport(System.Exception).
        public static void UploadReport(ErrorReportDTO dto)
        {
            ExecuteRetryer retryer = new ExecuteRetryer();
            retryer.Execute(() =>
            {
                OneTrue.UploadReport(dto);
            });
        }

        public static void UploadScreenshots(string errorId, string name, string imageBase64)
        {
            UploadToScreenshots.UploadReport(new UploadToScreenshotsDTO
            {
                ErrorId = errorId,
                Name = name,
                ImageBase64 = imageBase64
            });
        }

        public static string UploadMvcCollector(OneTrueCollector collector, object reporter, Exception exception, object httpContext)
        {
            var report = OneTrueProxy.GenerateReport(new SysCoreErrorReporterContext(reporter, exception, httpContext));
            if (collector.Items.Any())
            {
                var newList = new List<ContextCollectionDTO>(report.ContextCollections);
                newList.AddRange(collector.Items.ToArray());
                report.ContextCollections = newList.ToArray();
            }
            UploadReport(report);
            return report.ReportId;
        }
        #endregion



    }
}
